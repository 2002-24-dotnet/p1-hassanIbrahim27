// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaBox.OrmData.Databases;

namespace PizzaBox.OrmData.Migrations
{
    [DbContext(typeof(PizzaBoxDbContext))]
    [Migration("20200322055317_firstmigration")]
    partial class firstmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PizzaBox.Domain.Models.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("StoreId");

                    b.HasIndex("UserId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Pizza", b =>
                {
                    b.Property<int>("PizzaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PizzaId");

                    b.ToTable("Pizza");

                    b.HasData(
                        new
                        {
                            PizzaId = 1,
                            Name = "Vege",
                            Price = 10.99m
                        },
                        new
                        {
                            PizzaId = 2,
                            Name = "Cheese",
                            Price = 11.99m
                        },
                        new
                        {
                            PizzaId = 3,
                            Name = "Peppe",
                            Price = 9.99m
                        },
                        new
                        {
                            PizzaId = 4,
                            Name = "Vegan",
                            Price = 12.99m
                        },
                        new
                        {
                            PizzaId = 5,
                            Name = "Sushi",
                            Price = 12.99m
                        },
                        new
                        {
                            PizzaId = 6,
                            Name = "Mini",
                            Price = 3.99m
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.PizzaOrder", b =>
                {
                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("PizzaId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("PizzaOrder");
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.PizzaStore", b =>
                {
                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("PizzaId", "StoreId");

                    b.HasIndex("StoreId");

                    b.ToTable("PizzaStore");

                    b.HasData(
                        new
                        {
                            PizzaId = 1,
                            StoreId = 1,
                            Quantity = 100
                        },
                        new
                        {
                            PizzaId = 2,
                            StoreId = 1,
                            Quantity = 100
                        },
                        new
                        {
                            PizzaId = 3,
                            StoreId = 1,
                            Quantity = 0
                        },
                        new
                        {
                            PizzaId = 4,
                            StoreId = 1,
                            Quantity = 100
                        },
                        new
                        {
                            PizzaId = 5,
                            StoreId = 1,
                            Quantity = 100
                        },
                        new
                        {
                            PizzaId = 6,
                            StoreId = 1,
                            Quantity = 100
                        },
                        new
                        {
                            PizzaId = 1,
                            StoreId = 2,
                            Quantity = 100
                        },
                        new
                        {
                            PizzaId = 2,
                            StoreId = 2,
                            Quantity = 100
                        },
                        new
                        {
                            PizzaId = 3,
                            StoreId = 2,
                            Quantity = 100
                        },
                        new
                        {
                            PizzaId = 4,
                            StoreId = 2,
                            Quantity = 100
                        },
                        new
                        {
                            PizzaId = 5,
                            StoreId = 2,
                            Quantity = 0
                        },
                        new
                        {
                            PizzaId = 6,
                            StoreId = 2,
                            Quantity = 100
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manager")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreId");

                    b.ToTable("Store");

                    b.HasData(
                        new
                        {
                            StoreId = 1,
                            Location = "Down Town",
                            Manager = "Store1"
                        },
                        new
                        {
                            StoreId = 2,
                            Location = "City",
                            Manager = "Store2"
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Password = "123",
                            Type = "U",
                            UserName = "user1"
                        },
                        new
                        {
                            UserId = 2,
                            Password = "234",
                            Type = "U",
                            UserName = "user2"
                        },
                        new
                        {
                            UserId = 3,
                            Password = "345",
                            Type = "U",
                            UserName = "user3"
                        },
                        new
                        {
                            UserId = 4,
                            Password = "456",
                            Type = "U",
                            UserName = "user4"
                        },
                        new
                        {
                            UserId = 5,
                            Password = "123",
                            Type = "S",
                            UserName = "store1"
                        },
                        new
                        {
                            UserId = 6,
                            Password = "234",
                            Type = "S",
                            UserName = "store2"
                        });
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.Order", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaBox.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.PizzaOrder", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Order", "Order")
                        .WithMany("PizzaOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaBox.Domain.Models.Pizza", "Pizza")
                        .WithMany("PizzaOrders")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaBox.Domain.Models.PizzaStore", b =>
                {
                    b.HasOne("PizzaBox.Domain.Models.Pizza", "Pizza")
                        .WithMany("PizzaStores")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaBox.Domain.Models.Store", "Store")
                        .WithMany("PizzaStores")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
